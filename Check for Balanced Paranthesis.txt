#include<stdio.h>
#include<stdlib.h>
#include<string.h>
int top=-1;
char st[100];
char inf[100];
void push(char item)
{
    if(top>=99)
        printf("\nStack overflow");
    else
    {
        top++;
        st[top]=item;
    }
}
char pop()
{
    char item;
    if(top==-1)
        printf("Stack empty");
    else
    {
        item=st[top];
        st[top]='\0';
        top--;
        return item;
    }
}
int ispair(char a,char b)
{
    if(a=='('&&b==')')
        return 1;
    else if(a=='['&&b==']')
        return 1;
    else if(a=='{'&&b=='}')
        return 1;
    else 
        return 0;
}
void checkparanthesis()
{
    for(int i=0;i<=strlen(inf);i++)
    {
        if(inf[i]=='('||inf[i]==')'||inf[i]=='['||inf[i]==']'||inf[i]=='}'||inf[i]=='{')
        {
            char a=inf[i];
            char b=st[top];
            if(ispair(b,a))
            {
                    top--;
            }
            else
            {
                top++;
                st[top]=inf[i];
            }
        }
    }
    if(top==-1)
        printf("\nBalanced");
    else
        printf("\nUnbalanced");
}
int main()
{
    char a;
    printf("\nEnter Infix Expression:");
    scanf("%s",inf);
    checkparanthesis();
}